import{r as l,o as p,b as r,c as b,d as f,e as t,f as o,g as T,i as y}from"./index-9dd5594f.js";class N{getTreeTableNodes(){return fetch("demo/data/treetablenodes.json").then(e=>e.json()).then(e=>e.root)}getTreeNodes(){return fetch("demo/data/treenodes.json").then(e=>e.json()).then(e=>e.root)}}const x={class:"grid"},V={class:"col-12"},g={class:"card"},K=t("h5",null,"Tree",-1),j={class:"col-12"},k={class:"card"},C=t("h5",null,"TreeTable",-1),B={__name:"Tree",setup(h){const e=l(null),d=l(null),u=l(null),i=l(null),_=new N;return p(()=>{_.getTreeNodes().then(s=>e.value=s),_.getTreeTableNodes().then(s=>u.value=s)}),(s,n)=>{const v=r("Tree",!0),a=r("Column"),m=r("TreeTable");return b(),f("div",x,[t("div",V,[t("div",g,[K,o(v,{value:e.value,selectionMode:"checkbox",selectionKeys:d.value,"onUpdate:selectionKeys":n[0]||(n[0]=c=>d.value=c)},null,8,["value","selectionKeys"])])]),t("div",j,[t("div",k,[C,o(m,{value:u.value,selectionMode:"checkbox",selectionKeys:i.value,"onUpdate:selectionKeys":n[1]||(n[1]=c=>i.value=c)},{header:T(()=>[y(" FileSystem ")]),default:T(()=>[o(a,{field:"name",header:"Name",expander:!0}),o(a,{field:"size",header:"Size"}),o(a,{field:"type",header:"Type"})]),_:1},8,["value","selectionKeys"])])])])}}};export{B as default};
